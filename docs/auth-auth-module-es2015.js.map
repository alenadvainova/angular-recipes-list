{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/message.service.ts","./src/app/auth/message/message.component.ts","./src/app/auth/message/message.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/directive/fieldsMustMatch.directive.ts","./src/app/validator/fieldsMustMatch.validator.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Route, RouterModule } from \"@angular/router\";\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { AuthComponent } from \"./auth.component\";\r\n\r\nconst authRoutes: Route[] = [\r\n  {\r\n    path: \"\",\r\n    component: AuthComponent,\r\n    children: [\r\n      { path: \"login\", component: LoginComponent },\r\n      { path: \"register\", component: RegisterComponent },\r\n    ],\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(authRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  //selector: \"app-auth\",\r\n  templateUrl: \"./auth.component.html\",\r\n  //styleUrls: [\"./auth.component.css\"],\r\n})\r\nexport class AuthComponent {}\r\n","<app-message></app-message>\r\n<div class=\"row\">\r\n  <div class=\"col-12 col-md-8 offset-md-2\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AuthRoutingModule } from \"./auth-routing.module\";\nimport { AuthComponent } from \"./auth.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { FieldsMustMatchDerective } from \"../directive/fieldsMustMatch.directive\";\nimport { MessageComponent } from \"./message/message.component\";\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent,\n    RegisterComponent,\n    FieldsMustMatchDerective,\n    MessageComponent,\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, AuthRoutingModule],\n})\nexport class AuthModule {}\n","import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthService, AuthResponseData } from \"../auth.service\";\r\nimport { MessageService } from \"../message.service\";\r\n\r\n@Component({\r\n  selector: \"app-auth-login\",\r\n  templateUrl: \"./login.component.html\",\r\n})\r\nexport class LoginComponent {\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (!form.valid) {\r\n      return;\r\n    }\r\n\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n\r\n    this.isLoading = true;\r\n    let authObs: Observable<AuthResponseData>;\r\n    authObs = this.authService.login(email, password);\r\n    authObs.subscribe(\r\n      (response) => {\r\n        this.isLoading = false;\r\n        this.router.navigate([\"/recipes\"]);\r\n        form.reset();\r\n      },\r\n      (errorMsg) => {\r\n        this.messageService.setMessage(errorMsg);\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form #authLoginForm=\"ngForm\" (ngSubmit)=\"onSubmit(authLoginForm)\">\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">E-mail</label>\r\n    <input\r\n      type=\"email\"\r\n      id=\"email\"\r\n      class=\"form-control\"\r\n      ngModel\r\n      name=\"email\"\r\n      required\r\n      email\r\n      #email=\"ngModel\"\r\n      [ngClass]=\"{ 'is-invalid': email.touched && !email.valid }\"\r\n    />\r\n    <div *ngIf=\"email.touched && !email.valid\" class=\"invalid-feedback\">\r\n      <div>Email is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input\r\n      type=\"password\"\r\n      id=\"password\"\r\n      class=\"form-control\"\r\n      ngModel\r\n      name=\"password\"\r\n      required\r\n      minlength=\"6\"\r\n      #password=\"ngModel\"\r\n      [ngClass]=\"{ 'is-invalid': password.touched && !password.valid }\"\r\n    />\r\n    <div *ngIf=\"password.touched && !password.valid\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"password.errors.required\">Password is required</div>\r\n      <div *ngIf=\"password.errors.minlength\">\r\n        Password must be at least 6 characters\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary\"\r\n      [disabled]=\"!authLoginForm.valid || isLoading\"\r\n    >\r\n      <span\r\n        *ngIf=\"isLoading\"\r\n        class=\"spinner-border spinner-border-sm mr-1\"\r\n      ></span>\r\n      Log in\r\n    </button>\r\n    <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n  </div>\r\n</form>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class MessageService {\r\n  private subject = new Subject<any>();\r\n\r\n  public setMessage(message: string) {\r\n    this.subject.next({ text: message });\r\n  }\r\n\r\n  public getMessage() {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  public clearMessage() {\r\n    this.subject.next();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\r\nimport { MessageService } from \"../message.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-message\",\r\n  templateUrl: \"message.component.html\",\r\n})\r\nexport class MessageComponent implements OnInit, OnDestroy {\r\n  @Input() message: string = null;\r\n  messageSub: Subscription;\r\n\r\n  constructor(private messageService: MessageService) {}\r\n\r\n  ngOnInit() {\r\n    this.messageSub = this.messageService.getMessage().subscribe((message) => {\r\n      this.message = message.text;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.messageSub.unsubscribe();\r\n  }\r\n\r\n  onClose() {\r\n    this.message = null;\r\n  }\r\n}\r\n","<div *ngIf=\"message\" class=\"alert alert-danger alert-dismissable container\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    data-dismiss=\"alert\"\r\n    aria-label=\"Close\"\r\n    (click)=\"onClose()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <span>{{ message }}</span>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthService, AuthResponseData } from \"../auth.service\";\r\nimport { MessageService } from \"../message.service\";\r\n\r\n@Component({\r\n  selector: \"app-auth-register\",\r\n  templateUrl: \"./register.component.html\",\r\n})\r\nexport class RegisterComponent {\r\n  error: string = null;\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (!form.valid) {\r\n      return;\r\n    }\r\n\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n    const firstName = form.value.firstName;\r\n    const lastName = form.value.lastName;\r\n\r\n    this.isLoading = true;\r\n    let authObs: Observable<AuthResponseData>;\r\n    authObs = this.authService.signup(email, password, firstName, lastName);\r\n    authObs.subscribe(\r\n      (response) => {\r\n        this.isLoading = false;\r\n        form.reset();\r\n        this.router.navigate([\"/recipes\"]);\r\n      },\r\n      (errorMsg) => {\r\n        this.messageService.setMessage(errorMsg);\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form\r\n  #authRegForm=\"ngForm\"\r\n  (ngSubmit)=\"onSubmit(authRegForm)\"\r\n  [fieldsMustMatch]=\"['password', 'confirmPassword']\"\r\n>\r\n  <div class=\"form-group\">\r\n    <label for=\"firstName\">First name</label>\r\n    <input\r\n      type=\"text\"\r\n      id=\"firstName\"\r\n      class=\"form-control\"\r\n      ngModel\r\n      name=\"firstName\"\r\n      required\r\n      #firstName=\"ngModel\"\r\n      [ngClass]=\"{ 'is-invalid': firstName.touched && !firstName.valid }\"\r\n    />\r\n    <div *ngIf=\"firstName.touched && !firstName.valid\" class=\"invalid-feedback\">\r\n      <div>First Name is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"lastName\">Last name</label>\r\n    <input\r\n      type=\"text\"\r\n      id=\"lastName\"\r\n      class=\"form-control\"\r\n      ngModel\r\n      name=\"lastName\"\r\n      required\r\n      #lastName=\"ngModel\"\r\n      [ngClass]=\"{ 'is-invalid': lastName.touched && !lastName.valid }\"\r\n    />\r\n    <div *ngIf=\"lastName.touched && !lastName.valid\" class=\"invalid-feedback\">\r\n      <div>Last Name is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">E-mail</label>\r\n    <input\r\n      type=\"email\"\r\n      id=\"email\"\r\n      class=\"form-control\"\r\n      ngModel\r\n      name=\"email\"\r\n      required\r\n      email\r\n      #email=\"ngModel\"\r\n      [ngClass]=\"{ 'is-invalid': email.touched && !email.valid }\"\r\n    />\r\n    <div *ngIf=\"email.touched && !email.valid\" class=\"invalid-feedback\">\r\n      <div>Email is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input\r\n      type=\"password\"\r\n      id=\"password\"\r\n      class=\"form-control\"\r\n      ngModel\r\n      name=\"password\"\r\n      required\r\n      minlength=\"6\"\r\n      #password=\"ngModel\"\r\n      [ngClass]=\"{ 'is-invalid': password.touched && !password.valid }\"\r\n    />\r\n    <div *ngIf=\"password.touched && !password.valid\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"password.errors.required\">Password is required</div>\r\n      <div *ngIf=\"password.errors.minlength\">\r\n        Password must be at least 6 characters\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"confirmPassword\">Confirm password</label>\r\n    <input\r\n      type=\"password\"\r\n      id=\"confirmPassword\"\r\n      class=\"form-control\"\r\n      ngModel\r\n      name=\"confirmPassword\"\r\n      required\r\n      #confirmPassword=\"ngModel\"\r\n      [ngClass]=\"{\r\n        'is-invalid': confirmPassword.touched && !confirmPassword.valid\r\n      }\"\r\n    />\r\n    <div\r\n      *ngIf=\"confirmPassword.touched && !confirmPassword.valid\"\r\n      class=\"invalid-feedback\"\r\n    >\r\n      <div *ngIf=\"confirmPassword.errors.required\">\r\n        Confirm password is required\r\n      </div>\r\n      <div *ngIf=\"confirmPassword.errors.mustMatch\">\r\n        Confirm password must match\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary\"\r\n      [disabled]=\"!authRegForm.valid || isLoading\"\r\n    >\r\n      <span\r\n        *ngIf=\"isLoading\"\r\n        class=\"spinner-border spinner-border-sm mr-1\"\r\n      ></span>\r\n      Create account\r\n    </button>\r\n    <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n  </div>\r\n</form>\r\n","import {\r\n  Validator,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  NG_VALIDATORS,\r\n} from \"@angular/forms\";\r\nimport { Input, Directive } from \"@angular/core\";\r\n\r\nimport { FieldsMustMatch } from \"../validator/fieldsMustMatch.validator\";\r\n\r\n@Directive({\r\n  selector: \"[fieldsMustMatch]\",\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: FieldsMustMatchDerective,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class FieldsMustMatchDerective implements Validator {\r\n  @Input(\"fieldsMustMatch\") fieldsMustMatch: string[] = [];\r\n\r\n  validate(formGroup: FormGroup): ValidationErrors {\r\n    if (this.fieldsMustMatch.length < 2) {\r\n      return null;\r\n    }\r\n    return FieldsMustMatch(\r\n      this.fieldsMustMatch[0],\r\n      this.fieldsMustMatch[1]\r\n    )(formGroup);\r\n  }\r\n}\r\n","import { FormGroup } from \"@angular/forms\";\r\n\r\nexport function FieldsMustMatch(controlName: string, controlNameMatch: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const controlMatch = formGroup.controls[controlNameMatch];\r\n\r\n    if (!control || !controlMatch) {\r\n      return null;\r\n    }\r\n\r\n    if (controlMatch.errors) {\r\n      return null;\r\n    }\r\n\r\n    if (control.value !== controlMatch.value) {\r\n      controlMatch.setErrors({ mustMatch: true });\r\n    } else {\r\n      controlMatch.setErrors(null);\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":"webpack:///"}