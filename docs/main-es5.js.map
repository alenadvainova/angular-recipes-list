{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.service.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/user.model.ts","webpack:///src/app/data-storage.service.ts","webpack:///src/app/directive/dropdown.directive.ts","webpack:///src/app/directive/placeholder.directive.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/loading-spinner/loading-spinner.component.ts","webpack:///src/app/recipes-folder/recipe-detail/recipe-detail.component.ts","webpack:///src/app/recipes-folder/recipe-detail/recipe-detail.component.html","webpack:///src/app/recipes-folder/recipe-edit/recipe-edit.component.ts","webpack:///src/app/recipes-folder/recipe-edit/recipe-edit.component.html","webpack:///src/app/recipes-folder/recipe-item/recipe-item.component.ts","webpack:///src/app/recipes-folder/recipe-item/recipe-item.component.html","webpack:///src/app/recipes-folder/recipe-list/recipe-list.component.ts","webpack:///src/app/recipes-folder/recipe-list/recipe-list.component.html","webpack:///src/app/recipes-folder/recipe-resolver.service.ts","webpack:///src/app/recipes-folder/recipe-start/recipe-start.component.ts","webpack:///src/app/recipes-folder/recipe-start/recipe-start.component.html","webpack:///src/app/recipes-folder/recipe.model.ts","webpack:///src/app/recipes-folder/recipe.service.ts","webpack:///src/app/recipes-folder/recipes/recipes.component.ts","webpack:///src/app/recipes-folder/recipes/recipes.component.html","webpack:///src/app/shopping-list-folder/ingredient.model.ts","webpack:///src/app/shopping-list-folder/shopping-list-edit/shopping-list-edit.component.ts","webpack:///src/app/shopping-list-folder/shopping-list-edit/shopping-list-edit.component.html","webpack:///src/app/shopping-list-folder/shopping-list/shopping-list.component.ts","webpack:///src/app/shopping-list-folder/shopping-list/shopping-list.component.html","webpack:///src/app/shopping-list-folder/shoppingList.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","authModule","x","AuthModule","appRoutes","path","redirectTo","pathMatch","component","canActivate","children","loadChildren","AppRoutingModule","forRoot","imports","AppComponent","authService","autoLogin","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthInterceptorService","next","user","pipe","handle","modifidedReq","clone","params","set","token","AuthGuard","router","route","isAuth","navigate","queryParams","returnUrl","url","providedIn","AuthService","http","recipeService","shService","email","password","firstName","lastName","post","returnSecureToken","handleError","resData","handleAuth","idToken","expiresIn","localId","userData","JSON","parse","localStorage","getItem","loadedUser","_token","Date","_tokenExpirationDate","_userId","expirationDuration","getTime","autoLogout","removeItem","clearRecipes","clearIngredients","tokenExpirationTimer","clearTimeout","setTimeout","logout","errorRes","errorMsg","error","message","userId","tokenExpirationDate","setItem","stringify","User","DataStorageService","recipesObj","recipes","getRecipes","forEach","item","key","recipeId","generateUniqueId","patch","subscribe","response","console","log","recipe","get","isNotNull","Object","map","ingredients","setRecipes","input","undefined","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","Array","i","charAt","Math","floor","join","random","length","DropdownDirective","elRef","isOpen","PlaceholderDirective","viewContainerRef","HeaderComponent","dataStorageService","userSub","saveRecipes","unsubscribe","LoadingSpinnerComponent","template","RecipeDetailComponent","getRecipeById","getRecipe","addToShoppingList","relativeTo","deleteRecipe","updateRecipes","RecipeEditComponent","editMode","loading","initForm","newRecipe","recipeForm","value","updateRecipe","createRecipe","push","name","required","amount","pattern","index","removeAt","recipeName","recipeImagePath","recipeDescription","recipeIngredients","imagePath","description","element","saveRecipe","onCancel","controls","onSubmit","onAddIngredient","RecipeItemComponent","RecipeListComponent","subscription","recipeChanged","onNewRecip","RecipeResolverService","state","RecipeStartComponent","Recipe","RecipeService","recipeItemSelectedEvnt","slice","find","addIngredients","currRecipe","splice","RecipesComponent","Ingredient","ShoppingListEditComponent","slService","startedEditing","editedIteIdx","editedItem","getIngredient","slForm","setValue","form","newIngredient","updateIngredient","addIngredient","reset","deleteIngredient","onClear","onAddItem","ShoppingListComponent","getIngredients","ingredientChanged","ShoppingListService","ingredient","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Route, RouterModule } from \"@angular/router\";\r\nimport { RecipesComponent } from \"./recipes-folder/recipes/recipes.component\";\r\nimport { ShoppingListComponent } from \"./shopping-list-folder/shopping-list/shopping-list.component\";\r\nimport { RecipeStartComponent } from \"./recipes-folder/recipe-start/recipe-start.component\";\r\nimport { RecipeDetailComponent } from \"./recipes-folder/recipe-detail/recipe-detail.component\";\r\nimport { RecipeEditComponent } from \"./recipes-folder/recipe-edit/recipe-edit.component\";\r\nimport { RecipeResolverService } from \"./recipes-folder/recipe-resolver.service\";\r\nimport { AuthComponent } from \"./auth/auth.component\";\r\nimport { AuthGuard } from \"./auth/auth.guard\";\r\nimport { RegisterComponent } from \"./auth/register/register.component\";\r\n\r\nconst authModule = () => import(\"./auth/auth.module\").then((x) => x.AuthModule);\r\n\r\nconst appRoutes: Route[] = [\r\n  { path: \"\", redirectTo: \"/recipes\", pathMatch: \"full\" },\r\n  {\r\n    path: \"recipes\",\r\n    component: RecipesComponent,\r\n    canActivate: [AuthGuard],\r\n    resolve: [RecipeResolverService],\r\n    children: [\r\n      { path: \"\", component: RecipeStartComponent },\r\n      { path: \"new\", component: RecipeEditComponent },\r\n      {\r\n        path: \":id\",\r\n        component: RecipeDetailComponent,\r\n        //resolve: [RecipeResolverService],\r\n      },\r\n      {\r\n        path: \":id/edit\",\r\n        component: RecipeEditComponent,\r\n        //resolve: [RecipeResolverService],\r\n      },\r\n    ],\r\n  },\r\n  { path: \"shopping-list\", component: ShoppingListComponent },\r\n  { path: \"auth\", loadChildren: authModule },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { RecipeService } from \"./recipes-folder/recipe.service\";\nimport { AuthService } from \"./auth/auth.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoLogin();\n  }\n}\n","<app-header></app-header>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { AppComponent } from \"./app.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AuthRoutingModule } from \"./auth/auth-routing.module\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { RecipesComponent } from \"./recipes-folder/recipes/recipes.component\";\nimport { RecipeListComponent } from \"./recipes-folder/recipe-list/recipe-list.component\";\nimport { RecipeDetailComponent } from \"./recipes-folder/recipe-detail/recipe-detail.component\";\nimport { RecipeItemComponent } from \"./recipes-folder/recipe-item/recipe-item.component\";\nimport { ShoppingListComponent } from \"./shopping-list-folder/shopping-list/shopping-list.component\";\nimport { ShoppingListEditComponent } from \"./shopping-list-folder/shopping-list-edit/shopping-list-edit.component\";\nimport { DropdownDirective } from \"./directive/dropdown.directive\";\nimport { ShoppingListService } from \"./shopping-list-folder/shoppingList.service\";\nimport { RecipeStartComponent } from \"./recipes-folder/recipe-start/recipe-start.component\";\nimport { RecipeEditComponent } from \"./recipes-folder/recipe-edit/recipe-edit.component\";\nimport { RecipeService } from \"./recipes-folder/recipe.service\";\nimport { LoadingSpinnerComponent } from \"./loading-spinner/loading-spinner.component\";\nimport { AuthInterceptorService } from \"./auth/auth-interceptor.service\";\nimport { AlertComponent } from \"./alert/alert.component\";\nimport { PlaceholderDirective } from \"./directive/placeholder.directive\";\nimport { MessageComponent } from \"./auth/message/message.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent,\n    ShoppingListComponent,\n    ShoppingListEditComponent,\n    DropdownDirective,\n    RecipeStartComponent,\n    RecipeEditComponent,\n    LoadingSpinnerComponent,\n    PlaceholderDirective,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    ShoppingListService,\n    RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpParams\r\n} from \"@angular/common/http\";\r\n\r\nimport { AuthService } from \"./auth.service\";\r\nimport { take, exhaustMap } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return this.authService.user.pipe(\r\n      take(1),\r\n      exhaustMap(user => {\r\n        if (!user) {\r\n          return next.handle(req);\r\n        }\r\n        const modifidedReq = req.clone({\r\n          params: new HttpParams().set(\"auth\", user.token)\r\n        });\r\n        return next.handle(modifidedReq);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  UrlTree,\r\n} from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, take } from \"rxjs/operators\";\r\n\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n  ): UrlTree | Observable<boolean | UrlTree> {\r\n    return this.authService.user.pipe(\r\n      take(1),\r\n      map((user) => {\r\n        const isAuth = !!user;\r\n        if (isAuth) {\r\n          return true;\r\n        }\r\n\r\n        // return this.router.createUrlTree([\"/auth/login\"]);\r\n        this.router.navigate([\"/auth/login\"], {\r\n          queryParams: { returnUrl: router.url },\r\n        });\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { catchError, tap } from \"rxjs/operators\";\r\nimport { throwError, BehaviorSubject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { User } from \"./user.model\";\r\n\r\nimport { RecipeService } from \"../recipes-folder/recipe.service\";\r\nimport { ShoppingListService } from \"../shopping-list-folder/shoppingList.service\";\r\n\r\nexport interface AuthResponseData {\r\n  idToken: string;\r\n  email: string;\r\n  refreshToken: string;\r\n  expiresIn: string;\r\n  localId: string;\r\n  registered?: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  user = new BehaviorSubject<User>(null);\r\n  private tokenExpirationTimer: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private recipeService: RecipeService,\r\n    private shService: ShoppingListService\r\n  ) {}\r\n\r\n  signup(email: string, password: string, firstName: string, lastName: string) {\r\n    return this.http\r\n      .post<AuthResponseData>(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAQaCXzGqTOYhM-IYcBkZNVDKUkIOMOkWI\",\r\n        {\r\n          email: email,\r\n          password: password,\r\n          returnSecureToken: true,\r\n        }\r\n      )\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap((resData) => {\r\n          this.handleAuth(\r\n            resData.email,\r\n            resData.idToken,\r\n            +resData.expiresIn,\r\n            resData.localId\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return this.http\r\n      .post<AuthResponseData>(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAQaCXzGqTOYhM-IYcBkZNVDKUkIOMOkWI\",\r\n        {\r\n          email: email,\r\n          password: password,\r\n          returnSecureToken: true,\r\n        }\r\n      )\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap((resData) => {\r\n          this.handleAuth(\r\n            resData.email,\r\n            resData.idToken,\r\n            +resData.expiresIn,\r\n            resData.localId\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  autoLogin() {\r\n    const userData: {\r\n      email: string;\r\n      _token: string;\r\n      _tokenExpirationDate: string;\r\n      _userId: string;\r\n    } = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (!userData) {\r\n      return;\r\n    }\r\n\r\n    const loadedUser = new User(\r\n      userData.email,\r\n      userData._token,\r\n      new Date(userData._tokenExpirationDate),\r\n      userData._userId\r\n    );\r\n\r\n    if (loadedUser.token) {\r\n      this.user.next(loadedUser);\r\n\r\n      const expirationDuration =\r\n        new Date(userData._tokenExpirationDate).getTime() -\r\n        new Date().getTime();\r\n      this.autoLogout(expirationDuration);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.user.next(null);\r\n    this.router.navigate([\"/auth/login\"]);\r\n    localStorage.removeItem(\"userData\");\r\n    this.recipeService.clearRecipes();\r\n    this.shService.clearIngredients();\r\n    if (this.tokenExpirationTimer) {\r\n      clearTimeout(this.tokenExpirationTimer);\r\n    }\r\n    this.tokenExpirationTimer = null;\r\n  }\r\n\r\n  autoLogout(expirationDuration: number) {\r\n    this.tokenExpirationTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expirationDuration);\r\n  }\r\n\r\n  private handleError(errorRes: HttpErrorResponse) {\r\n    let errorMsg = \"An unknown error occurred!\";\r\n    if (!errorRes.error || !errorRes.error.error) {\r\n      return throwError(errorMsg);\r\n    }\r\n    switch (errorRes.error.error.message) {\r\n      case \"EMAIL_EXISTS\":\r\n        errorMsg = \"The email already exists\";\r\n        break;\r\n      case \"EMAIL_NOT_FOUND\":\r\n        errorMsg = \" This email does not exist!\";\r\n        break;\r\n      case \"INVALID_PASSWORD\":\r\n        errorMsg = \" The password is not correct!\";\r\n        break;\r\n    }\r\n\r\n    return throwError(errorMsg);\r\n  }\r\n\r\n  private handleAuth(\r\n    email: string,\r\n    token: string,\r\n    expiresIn: number,\r\n    userId: string\r\n  ) {\r\n    const tokenExpirationDate = new Date(\r\n      new Date().getTime() + expiresIn * 1000\r\n    );\r\n    const user = new User(email, token, tokenExpirationDate, userId);\r\n    this.autoLogout(expiresIn * 1000);\r\n\r\n    this.user.next(user);\r\n\r\n    localStorage.setItem(\"userData\", JSON.stringify(user));\r\n  }\r\n}\r\n","export class User {\r\n  constructor(\r\n    public email: string,\r\n    private _token: string,\r\n    private _tokenExpirationDate: Date,\r\n    private _userId: string\r\n  ) {}\r\n\r\n  get token() {\r\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\r\n      return null;\r\n    }\r\n    return this._token;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map, tap, filter, first } from \"rxjs/operators\";\r\n\r\nimport { RecipeService } from \"./recipes-folder/recipe.service\";\r\nimport { Recipe } from \"./recipes-folder/recipe.model\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class DataStorageService {\r\n  constructor(private http: HttpClient, private recipeService: RecipeService) {}\r\n\r\n  saveRecipes() {\r\n    const userData: {\r\n      email: string;\r\n      _token: string;\r\n      _tokenExpirationDate: string;\r\n      _userId: string;\r\n    } = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let recipesObj = {};\r\n    const recipes = this.recipeService.getRecipes();\r\n    recipes.forEach((item) => {\r\n      let key = \"\";\r\n      if (item.recipeId == \"new\") {\r\n        key = this.generateUniqueId();\r\n        item.recipeId = key;\r\n      } else {\r\n        key = item.recipeId;\r\n      }\r\n      recipesObj[key] = item;\r\n    });\r\n\r\n    this.http\r\n      .patch(\r\n        `https://recipe-book-68ac0.firebaseio.com/recipes.json`,\r\n        recipesObj\r\n      )\r\n      .subscribe((response) => console.log(response));\r\n  }\r\n\r\n  saveRecipe(recipe: Recipe) {\r\n    const userData: {\r\n      email: string;\r\n      _token: string;\r\n      _tokenExpirationDate: string;\r\n      _userId: string;\r\n    } = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let recipesObj = {};\r\n    recipe.recipeId = this.generateUniqueId();\r\n    recipe.userId = userData._userId;\r\n    recipesObj[recipe.recipeId] = recipe;\r\n\r\n    return this.http.patch(\r\n      `https://recipe-book-68ac0.firebaseio.com/recipes.json`,\r\n      recipesObj\r\n    );\r\n  }\r\n\r\n  updateRecipe(recipeId: string, recipe: Recipe) {\r\n    return this.http.patch(\r\n      `https://recipe-book-68ac0.firebaseio.com/recipes/${recipeId}.json`,\r\n      recipe\r\n    );\r\n  }\r\n\r\n  deleteRecipe(recipeId: string) {\r\n    return this.http.delete(\r\n      `https://recipe-book-68ac0.firebaseio.com/recipes/${recipeId}.json`\r\n    );\r\n  }\r\n\r\n  getRecipes() {\r\n    const userData: {\r\n      email: string;\r\n      _token: string;\r\n      _tokenExpirationDate: string;\r\n      _userId: string;\r\n    } = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    return this.http\r\n      .get<Recipe[]>(\r\n        `https://recipe-book-68ac0.firebaseio.com/recipes.json?orderBy=\"userId\"&equalTo=\"${userData._userId}\"`\r\n      )\r\n      .pipe(\r\n        filter(this.isNotNull),\r\n        map((recipes) => {\r\n          return Object.keys(recipes).map((recipe) => {\r\n            return {\r\n              ...recipes[recipe],\r\n              recipeId: recipe,\r\n              ingredients: recipes[recipe].ingredients\r\n                ? recipes[recipe].ingredients\r\n                : [],\r\n            };\r\n          });\r\n        }),\r\n        tap((recipes) => {\r\n          this.recipeService.setRecipes(recipes);\r\n        })\r\n      );\r\n  }\r\n\r\n  getRecipeById(recipeId: string) {\r\n    return this.http\r\n      .get<Recipe>(\r\n        `https://recipe-book-68ac0.firebaseio.com/recipes/${recipeId}.json`\r\n      )\r\n      .pipe(\r\n        first(),\r\n        map((recipe) => {\r\n          return {\r\n            ...recipe,\r\n            ingredients: recipe.ingredients ? recipe.ingredients : [],\r\n          };\r\n        })\r\n      );\r\n  }\r\n\r\n  isNotNull(input: null | undefined | Recipe[]) {\r\n    return input != null && input != undefined;\r\n  }\r\n\r\n  private generateUniqueId() {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    const PUSH_CHARS =\r\n      \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    let lastPushTime = 0;\r\n\r\n    let lastRandChars = [];\r\n\r\n    let now = new Date().getTime();\r\n    let duplicateTime = now === lastPushTime;\r\n    lastPushTime = now;\r\n\r\n    const timeStampChars = new Array(8);\r\n    for (let i = 7; i >= 0; i--) {\r\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n      // NOTE: Can't use << here because javascript will convert to int and lose the upper bits.\r\n      now = Math.floor(now / 64);\r\n    }\r\n    if (now !== 0)\r\n      throw new Error(\"We should have converted the entire timestamp.\");\r\n\r\n    let id = timeStampChars.join(\"\");\r\n\r\n    if (!duplicateTime) {\r\n      for (let i = 0; i < 12; i++) {\r\n        lastRandChars[i] = Math.floor(Math.random() * 64);\r\n      }\r\n    } else {\r\n      // If the timestamp hasn't changed since last push, use the same random number, except incremented by 1.\r\n      for (let i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n        lastRandChars[i] = 0;\r\n      }\r\n      //lastRandChars[i]++;\r\n    }\r\n    for (let i = 0; i < 12; i++) {\r\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n    }\r\n    if (id.length != 20) throw new Error(\"Length should be 20.\");\r\n\r\n    return id;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostListener,\r\n  HostBinding,\r\n  ElementRef\r\n} from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[appDropdown]\"\r\n})\r\nexport class DropdownDirective {\r\n  @HostBinding(\"class.open\") isOpen = false;\r\n\r\n  @HostListener(\"click\") toggleOpen() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n}\r\n","import { Directive, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[appPlaceholder]\"\r\n})\r\nexport class PlaceholderDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n}\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { DataStorageService } from \"../data-storage.service\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"header.component.html\"\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  isAuth = false;\r\n  private userSub: Subscription;\r\n\r\n  constructor(\r\n    private dataStorageService: DataStorageService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userSub = this.authService.user.subscribe(user => {\r\n      this.isAuth = !user ? false : true;\r\n    });\r\n  }\r\n\r\n  onSaveRecipes() {\r\n    this.dataStorageService.saveRecipes();\r\n  }\r\n\r\n  onGetRecipes() {\r\n    this.dataStorageService.getRecipes().subscribe();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-sm navbar-light bg-light\"\r\n  style=\"margin-bottom: 10px\"\r\n>\r\n  <div class=\"navbar-header\">\r\n    <a href=\"#\" class=\"navbar-brand\">Recipe Book</a>\r\n  </div>\r\n  <div class=\"container-fluid\">\r\n    <ul class=\"navbar-nav justify-content-start\">\r\n      <li class=\"nav-item\" *ngIf=\"isAuth\">\r\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/recipes\"\r\n          >Recipes</a\r\n        >\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/shopping-list\"\r\n          >Shopping List</a\r\n        >\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav justify-content-end\" *ngIf=\"!isAuth\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/auth/login\"\r\n          >Sing in</a\r\n        >\r\n      </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav\" *ngIf=\"isAuth\">\r\n      <li class=\"dropdown nav-item\" appDropdown>\r\n        <a\r\n          id=\"dropdownMenuLink\"\r\n          style=\"cursor: pointer\"\r\n          class=\"dropdown-toggle nav-link\"\r\n          role=\"button\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n          >Manage</a\r\n        >\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n          <!-- <a\r\n            style=\"cursor: pointer\"\r\n            class=\"dropdown-item\"\r\n            (click)=\"onSaveRecipes()\"\r\n            >Save Data</a\r\n          > -->\r\n          <a\r\n            style=\"cursor: pointer\"\r\n            class=\"dropdown-item\"\r\n            (click)=\"onGetRecipes()\"\r\n            >Refresh Data</a\r\n          >\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          style=\"cursor: pointer\"\r\n          (click)=\"onLogout()\"\r\n          *ngIf=\"isAuth\"\r\n          >Sign out</a\r\n        >\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-loading-spinner\",\r\n  template: '<div class=\"lds-spinner\"><div></div><div></div><div></div><div>',\r\n  styleUrls: [\"./loading-spinner.component.css\"]\r\n})\r\nexport class LoadingSpinnerComponent {}\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\nimport { DataStorageService } from \"src/app/data-storage.service\";\n\nimport { Recipe } from \"../recipe.model\";\nimport { RecipeService } from \"../recipe.service\";\n\n@Component({\n  selector: \"app-recipe-detail\",\n  templateUrl: \"./recipe-detail.component.html\",\n  styleUrls: [\"./recipe-detail.component.css\"],\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe: Recipe;\n  id: string;\n\n  constructor(\n    private recipeService: RecipeService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private dataStorageService: DataStorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = params[\"id\"];\n      if (this.recipeService.getRecipes().length === 0) {\n        this.dataStorageService.getRecipeById(this.id).subscribe((recipe) => {\n          this.recipe = recipe;\n        });\n      } else {\n        this.recipe = this.recipeService.getRecipe(this.id);\n      }\n    });\n  }\n\n  onAddToShoppingList() {\n    this.recipeService.addToShoppingList(this.recipe.ingredients);\n  }\n\n  onEditRecipe() {\n    this.router.navigate([\"../\", this.id, \"edit\"], { relativeTo: this.route });\n  }\n\n  onDeleteRecipe() {\n    this.dataStorageService\n      .deleteRecipe(this.id)\n      .subscribe((response) => this.recipeService.updateRecipes());\n    this.router.navigate([\"/recipes\"]);\n  }\n}\n","<div class=\"row\" *ngIf=\"!recipe\">\n  <div class=\"col-12\">\n    <span class=\"spinner-border spinner-border-lg align-center\"></span>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"recipe\">\n  <div class=\"col-12\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <img\n          src=\"{{ recipe.imagePath }}\"\n          alt=\"{{ recipe.name }}\"\n          class=\"img-responsive\"\n          style=\"max-height: 50px\"\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1>{{ recipe.name }}</h1>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"btn-group\" appDropdown>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary dropdown-toggle\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            Manage Recipe <span class=\"caret\"></span>\n          </button>\n          <ul class=\"dropdown-menu\">\n            <li>\n              <a\n                (click)=\"onAddToShoppingList()\"\n                style=\"cursor: pointer\"\n                class=\"dropdown-item\"\n                >Add to Shopping List</a\n              >\n            </li>\n            <li>\n              <a\n                style=\"cursor: pointer\"\n                (click)=\"onEditRecipe()\"\n                class=\"dropdown-item\"\n                >Edit Recipe</a\n              >\n            </li>\n            <li>\n              <a\n                style=\"cursor: pointer\"\n                class=\"dropdown-item\"\n                (click)=\"onDeleteRecipe()\"\n                >Delete Recipe</a\n              >\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <p>{{ recipe.description }}</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <ul class=\"list-group\">\n          <li\n            class=\"list-group-item\"\n            *ngFor=\"let ingredient of recipe.ingredients\"\n          >\n            {{ ingredient.name }} ({{ ingredient.amount }})\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { FormGroup, FormControl, FormArray, Validators } from \"@angular/forms\";\nimport { RecipeService } from \"../recipe.service\";\nimport { Recipe } from \"../recipe.model\";\nimport { DataStorageService } from \"src/app/data-storage.service\";\nimport { first } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-recipe-edit\",\n  templateUrl: \"./recipe-edit.component.html\",\n  styleUrls: [\"./recipe-edit.component.css\"],\n})\nexport class RecipeEditComponent implements OnInit {\n  id: string;\n  editMode = false;\n  recipeForm: FormGroup;\n  loading = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService,\n    private router: Router,\n    private dataStorageService: DataStorageService\n  ) {}\n\n  get controls() {\n    // a getter\n    return (<FormArray>this.recipeForm.get(\"ingredients\")).controls;\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = params[\"id\"];\n      this.editMode = params[\"id\"] != null;\n      this.initForm();\n    });\n  }\n\n  onSubmit() {\n    const newRecipe = new Recipe(\n      this.recipeForm.value[\"name\"],\n      this.recipeForm.value[\"description\"],\n      this.recipeForm.value[\"imagePath\"],\n      this.recipeForm.value[\"ingredients\"]\n    );\n\n    this.loading = true;\n    if (this.editMode) {\n      this.updateRecipe(this.id, newRecipe);\n    } else {\n      this.createRecipe(newRecipe);\n    }\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get(\"ingredients\")).push(\n      new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/),\n        ]),\n      })\n    );\n  }\n\n  onCancel() {\n    this.router.navigate([\"../\"], { relativeTo: this.route });\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get(\"ingredients\")).removeAt(index);\n  }\n\n  private initForm() {\n    let recipeName = \"\";\n    let recipeImagePath = \"\";\n    let recipeDescription = \"\";\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe[\"ingredients\"]) {\n        recipe.ingredients.forEach((element) => {\n          recipeIngredients.push(\n            new FormGroup({\n              name: new FormControl(element.name, Validators.required),\n              amount: new FormControl(element.amount, [\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/),\n              ]),\n            })\n          );\n        });\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      ingredients: recipeIngredients,\n    });\n  }\n\n  private createRecipe(recipe: Recipe) {\n    this.dataStorageService.saveRecipe(recipe).subscribe(\n      (next) => {\n        this.recipeService.updateRecipes();\n        this.onCancel();\n      },\n      (error) => (this.loading = false)\n    );\n  }\n\n  private updateRecipe(recipeId: string, recipe: Recipe) {\n    this.dataStorageService.updateRecipe(recipeId, recipe).subscribe(\n      (next) => {\n        this.recipeService.updateRecipes();\n        this.onCancel();\n      },\n      (error) => (this.loading = false)\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-success\"\n            style=\"margin-right: 10px\"\n            [disabled]=\"!recipeForm.valid && recipeForm.touched && loading\"\n          >\n            <span\n              *ngIf=\"loading\"\n              class=\"spinner-border spinner-border-sm mr-1\"\n            ></span>\n            Save\n          </button>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">\n            Cancel\n          </button>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              class=\"form-control\"\n              formControlName=\"name\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"imagePath\">Image URL</label>\n            <input\n              type=\"text\"\n              id=\"imagePath\"\n              class=\"form-control\"\n              formControlName=\"imagePath\"\n              #imagePath\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <img [src]=\"imagePath.value\" class=\"img-responsive\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea\n              type=\"text\"\n              id=\"description\"\n              class=\"form-control\"\n              formControlName=\"description\"\n              rows=\"6\"\n            ></textarea>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\" formArrayName=\"ingredients\">\n          <div\n            class=\"row\"\n            *ngFor=\"let ingredientCtrl of controls; let i = index\"\n            [formGroupName]=\"i\"\n            style=\"margin-top: 10px\"\n          >\n            <div class=\"col-8\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\n            </div>\n            <div class=\"col-2\">\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                formControlName=\"amount\"\n              />\n            </div>\n            <div class=\"col-2\">\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                (click)=\"onDeleteIngredient(i)\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          <hr />\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <button\n                type=\"button\"\n                class=\"btn btn-success\"\n                (click)=\"onAddIngredient()\"\n              >\n                Add Ingredient\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Recipe } from \"../recipe.model\";\n\n@Component({\n  selector: \"app-recipe-item\",\n  templateUrl: \"./recipe-item.component.html\",\n  styleUrls: [\"./recipe-item.component.css\"]\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() index: number;\n\n  ngOnInit(): void {}\n}\n","<a\n  style=\"cursor: pointer\"\n  class=\"list-group-item clearfix\"\n  [routerLink]=\"[index]\"\n  routerLinkActive=\"active\"\n>\n  <div class=\"pull-left\">\n    <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n    <p class=\"list-group-item-text\">{{ recipe.description }}</p>\n  </div>\n  <span class=\"pull-right\">\n    <img\n      [src]=\"recipe.imagePath\"\n      alt=\"{{ recipe.name }}\"\n      class=\"img-responsive\"\n      style=\"max-height: 50px\"\n    />\n  </span>\n</a>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, map } from \"rxjs/operators\";\nimport { DataStorageService } from \"src/app/data-storage.service\";\n\nimport { Recipe } from \"../recipe.model\";\nimport { RecipeService } from \"../recipe.service\";\n\n@Component({\n  selector: \"app-recipe-list\",\n  templateUrl: \"./recipe-list.component.html\",\n  styleUrls: [\"./recipe-list.component.css\"],\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes: Recipe[];\n  subscription: Subscription;\n\n  constructor(\n    private recipeService: RecipeService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private dataStorageService: DataStorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.recipeService.recipeChanged.subscribe(\n      (recipes: Recipe[]) => {\n        this.dataStorageService.getRecipes().subscribe((recipes) => {\n          this.recipes = recipes;\n        });\n      }\n    );\n\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onNewRecip() {\n    this.router.navigate([\"new\"], { relativeTo: this.route });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <button class=\"btn btn-success\" (click)=\"onNewRecip()\">New Recipe</button>\n  </div>\n</div>\n<hr />\n<div class=\"row\">\n  <div class=\"col-12\">\n    <span\n      *ngIf=\"!recipes\"\n      class=\"spinner-border spinner-border-lg align-center\"\n    ></span>\n    <app-recipe-item\n      *ngFor=\"let recipeItem of recipes; let i = index\"\n      [recipe]=\"recipeItem\"\n      [index]=\"recipeItem.recipeId\"\n    ></app-recipe-item>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  Resolve,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from \"@angular/router\";\r\nimport { Recipe } from \"./recipe.model\";\r\nimport { DataStorageService } from \"../data-storage.service\";\r\nimport { RecipeService } from \"./recipe.service\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class RecipeResolverService implements Resolve<Recipe[]> {\r\n  constructor(\r\n    private dataStorageService: DataStorageService,\r\n    private recipeService: RecipeService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const recipes = this.recipeService.getRecipes();\r\n    if (recipes.length === 0) {\r\n      return this.dataStorageService.getRecipes();\r\n    } else {\r\n      return recipes;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please select a Recipe!</h3>\n","import { Ingredient } from \"../shopping-list-folder/ingredient.model\";\r\n\r\nexport class Recipe {\r\n  public recipeId: string;\r\n  public userId: string;\r\n  public name: string;\r\n  public description: string;\r\n  public imagePath: string;\r\n  public ingredients: Ingredient[];\r\n\r\n  constructor(\r\n    name: string,\r\n    description: string,\r\n    imagePath: string,\r\n    ingredients: Ingredient[]\r\n  ) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.imagePath = imagePath;\r\n    this.ingredients = ingredients;\r\n  }\r\n}\r\n","import { Recipe } from \"./recipe.model\";\r\nimport { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { Ingredient } from \"../shopping-list-folder/ingredient.model\";\r\nimport { ShoppingListService } from \"../shopping-list-folder/shoppingList.service\";\r\nimport { DataStorageService } from \"../data-storage.service\";\r\n\r\n@Injectable()\r\nexport class RecipeService {\r\n  recipeChanged = new Subject<Recipe[]>();\r\n\r\n  private recipes: Recipe[] = [];\r\n\r\n  recipeItemSelectedEvnt = new EventEmitter<Recipe>();\r\n\r\n  constructor(private shService: ShoppingListService) {}\r\n\r\n  getRecipes() {\r\n    return this.recipes.slice();\r\n  }\r\n\r\n  setRecipes(recipes: Recipe[]) {\r\n    this.recipes = recipes;\r\n    //this.recipeChanged.next(this.recipes.slice());\r\n  }\r\n\r\n  getRecipe(recipeId: string) {\r\n    return this.recipes.find((item) => item.recipeId == recipeId);\r\n  }\r\n\r\n  addToShoppingList(ingredients: Ingredient[]) {\r\n    this.shService.addIngredients(ingredients);\r\n  }\r\n\r\n  addRecipe(recipe: Recipe) {\r\n    const userData: {\r\n      email: string;\r\n      _token: string;\r\n      _tokenExpirationDate: string;\r\n      _userId: string;\r\n    } = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    recipe.userId = userData._userId;\r\n    recipe.recipeId = \"new\";\r\n    this.recipes.push(recipe);\r\n    this.recipeChanged.next(this.recipes.slice());\r\n  }\r\n\r\n  updateRecipe(index: number, newRecipe: Recipe) {\r\n    const currRecipe = this.recipes[index];\r\n    this.recipes[index] = {\r\n      recipeId: currRecipe.recipeId,\r\n      userId: currRecipe.userId,\r\n      ...newRecipe,\r\n    };\r\n    this.recipeChanged.next(this.recipes.slice());\r\n  }\r\n\r\n  deleteRecipe(index: number) {\r\n    const currRecipe = this.recipes[index];\r\n    this.recipes.splice(index, 1);\r\n    this.recipeChanged.next(this.recipes.slice());\r\n  }\r\n\r\n  clearRecipes() {\r\n    this.recipes = [];\r\n  }\r\n\r\n  updateRecipes() {\r\n    this.recipes = [];\r\n    this.recipeChanged.next(this.recipes.slice());\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Recipe } from \"../recipe.model\";\r\nimport { RecipeService } from \"../recipe.service\";\r\n\r\n@Component({\r\n  selector: \"app-recipes\",\r\n  templateUrl: \"recipes.component.html\",\r\n})\r\nexport class RecipesComponent implements OnInit {\r\n  selectedRecipe: Recipe;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-5\">\r\n    <app-recipe-list></app-recipe-list>\r\n  </div>\r\n  <div class=\"col-md-7\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","export class Ingredient {\r\n  constructor(public name: string, public amount: number) {}\r\n}\r\n","import { Component, OnInit, OnDestroy, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\nimport { Ingredient } from \"../ingredient.model\";\nimport { ShoppingListService } from \"../shoppingList.service\";\n\n@Component({\n  selector: \"app-shopping-list-edit\",\n  templateUrl: \"./shopping-list-edit.component.html\",\n  styleUrls: [\"./shopping-list-edit.component.css\"]\n})\nexport class ShoppingListEditComponent implements OnInit, OnDestroy {\n  @ViewChild(\"f\", { static: false }) slForm: NgForm;\n  subscription: Subscription;\n  editMode = false;\n  editedIteIdx: number;\n  editedItem: Ingredient;\n\n  constructor(private slService: ShoppingListService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.slService.startedEditing.subscribe(\n      (id: number) => {\n        this.editMode = true;\n        this.editedIteIdx = id;\n        this.editedItem = this.slService.getIngredient(id);\n        this.slForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount\n        });\n      }\n    );\n  }\n\n  onAddItem(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if (this.editMode) {\n      this.slService.updateIngredient(this.editedIteIdx, newIngredient);\n    } else {\n      this.slService.addIngredient(newIngredient);\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onDelete() {\n    this.slService.deleteIngredient(this.editedIteIdx);\n    this.onClear();\n  }\n\n  onClear() {\n    this.slForm.reset();\n    this.editMode = false;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <form (ngSubmit)=\"onAddItem(f)\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-5 form-group\">\n          <label for=\"name\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            class=\"form-control\"\n            name=\"name\"\n            ngModel\n            required\n          />\n        </div>\n        <div class=\"col-sm-2 form-group\">\n          <label for=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            class=\"form-control\"\n            name=\"amount\"\n            ngModel\n            required\n            pattern=\"^[1-9]+[0-9]*$\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 form-group\">\n          <button\n            class=\"btn btn-success\"\n            type=\"submit\"\n            [disabled]=\"!f.valid\"\n            style=\"margin-right:10px;\"\n          >\n            {{ editMode ? \"Update\" : \"Add\" }}\n          </button>\n          <button\n            class=\"btn btn-danger\"\n            type=\"button\"\n            (click)=\"onDelete()\"\n            *ngIf=\"editMode\"\n            style=\"margin-right:10px;\"\n          >\n            Delete\n          </button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClear()\">\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Ingredient } from \"../ingredient.model\";\nimport { ShoppingListService } from \"../shoppingList.service\";\n\n@Component({\n  selector: \"app-shopping-list\",\n  templateUrl: \"./shopping-list.component.html\",\n  styleUrls: [\"./shopping-list.component.css\"]\n})\nexport class ShoppingListComponent implements OnInit {\n  ingredients: Ingredient[];\n\n  constructor(private slService: ShoppingListService) {}\n\n  ngOnInit(): void {\n    this.ingredients = this.slService.getIngredients();\n    this.slService.ingredientChanged.subscribe((ingredients: Ingredient[]) => {\n      this.ingredients = ingredients;\n    });\n  }\n\n  onEditItem(id: number) {\n    this.slService.startedEditing.next(id);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-10\">\n    <app-shopping-list-edit></app-shopping-list-edit>\n    <hr />\n    <ul class=\"list-group\">\n      <a\n        class=\"list-group-item\"\n        style=\"cursor: pointer\"\n        *ngFor=\"let ingredient of ingredients; let i = index\"\n        (click)=\"onEditItem(i)\"\n      >\n        {{ ingredient.name }} ({{ ingredient.amount }})\n      </a>\n    </ul>\n  </div>\n</div>\n","import { EventEmitter } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { Ingredient } from \"./ingredient.model\";\r\n\r\nexport class ShoppingListService {\r\n  private ingredients: Ingredient[] = [];\r\n  ingredientChanged = new Subject<Ingredient[]>();\r\n  startedEditing = new Subject<number>();\r\n\r\n  getIngredients() {\r\n    return this.ingredients.slice();\r\n  }\r\n\r\n  getIngredient(index: number) {\r\n    return this.ingredients[index];\r\n  }\r\n\r\n  addIngredient(ingredient: Ingredient) {\r\n    this.ingredients.push(ingredient);\r\n    this.ingredientChanged.next(this.ingredients.slice());\r\n  }\r\n\r\n  addIngredients(ingredients: Ingredient[]) {\r\n    if (ingredients !== undefined) {\r\n      this.ingredients.push(...ingredients);\r\n      this.ingredientChanged.next(this.ingredients.slice());\r\n    }\r\n  }\r\n\r\n  updateIngredient(index: number, newIngredient: Ingredient) {\r\n    this.ingredients[index] = newIngredient;\r\n    this.ingredientChanged.next(this.ingredients.slice());\r\n  }\r\n\r\n  deleteIngredient(index: number) {\r\n    this.ingredients.splice(index, 1);\r\n    this.ingredientChanged.next(this.ingredients.slice());\r\n  }\r\n\r\n  clearIngredients() {\r\n    this.ingredients = [];\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}